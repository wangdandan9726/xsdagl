# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app
// StudentInfoManageView.cpp : implementation of the CStudentInfoManageView class
//

#include "stdafx.h"
#include "StudentInfoManage.h"

#include "StudentInfoManageDoc.h"
#include "StudentInfoManageView.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CStudentInfoManageView

IMPLEMENT_DYNCREATE(CStudentInfoManageView, CView)

BEGIN_MESSAGE_MAP(CStudentInfoManageView, CView)
	//{{AFX_MSG_MAP(CStudentInfoManageView)
	ON_WM_PAINT()
	//}}AFX_MSG_MAP
	// Standard printing commands
	ON_COMMAND(ID_FILE_PRINT, CView::OnFilePrint)
	ON_COMMAND(ID_FILE_PRINT_DIRECT, CView::OnFilePrint)
	ON_COMMAND(ID_FILE_PRINT_PREVIEW, CView::OnFilePrintPreview)
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CStudentInfoManageView construction/destruction

CStudentInfoManageView::CStudentInfoManageView()
{
	// TODO: add construction code here

}

CStudentInfoManageView::~CStudentInfoManageView()
{
}

BOOL CStudentInfoManageView::PreCreateWindow(CREATESTRUCT& cs)
{
	// TODO: Modify the Window class or styles here by modifying
	//  the CREATESTRUCT cs

	return CView::PreCreateWindow(cs);
}

/////////////////////////////////////////////////////////////////////////////
// CStudentInfoManageView drawing

void CStudentInfoManageView::OnDraw(CDC* pDC)
{
	CStudentInfoManageDoc* pDoc = GetDocument();
	ASSERT_VALID(pDoc);
	// TODO: add draw code for native data here
}

/////////////////////////////////////////////////////////////////////////////
// CStudentInfoManageView printing

BOOL CStudentInfoManageView::OnPreparePrinting(CPrintInfo* pInfo)
{
	// default preparation
	return DoPreparePrinting(pInfo);
}

void CStudentInfoManageView::OnBeginPrinting(CDC* /*pDC*/, CPrintInfo* /*pInfo*/)
{
	// TODO: add extra initialization before printing
}

void CStudentInfoManageView::OnEndPrinting(CDC* /*pDC*/, CPrintInfo* /*pInfo*/)
{
	// TODO: add cleanup after printing
}

/////////////////////////////////////////////////////////////////////////////
// CStudentInfoManageView diagnostics

#ifdef _DEBUG
void CStudentInfoManageView::AssertValid() const
{
	CView::AssertValid();
}

void CStudentInfoManageView::Dump(CDumpContext& dc) const
{
	CView::Dump(dc);
}

CStudentInfoManageDoc* CStudentInfoManageView::GetDocument() // non-debug version is inline
{
	ASSERT(m_pDocument->IsKindOf(RUNTIME_CLASS(CStudentInfoManageDoc)));
	return (CStudentInfoManageDoc*)m_pDocument;
}
#endif //_DEBUG

/////////////////////////////////////////////////////////////////////////////
// CStudentInfoManageView message handlers

void CStudentInfoManageView::OnPaint() 
{
	CPaintDC* pDC=new CPaintDC(this);            // 创建设备上下文
	CBitmap bmp;	  
	RECT	Rect;
	RECT	RectView;
	POINT	ptSize;
	CDC		dcmem;
	BITMAP	bm;
	int b = bmp.LoadBitmap(IDB_BITMAP_BG);        //将位图取出；
	dcmem.CreateCompatibleDC(pDC);                //创建兼容设备上下文。
	dcmem.SelectObject(&bmp);                      //用设备上下文选择位图；
	dcmem.SetMapMode(pDC->GetMapMode());        //设置映射方式；
	GetObject(bmp.m_hObject, sizeof(BITMAP), (LPSTR)&bm); //映射位图；
	GetClientRect(&Rect);
	ptSize.x=bm.bmWidth;
	ptSize.y=bm.bmHeight;
	pDC->DPtoLP((LPPOINT)&ptSize,1);              //设备单元to逻辑单元;
	GetClientRect(&RectView);
	CRect RectBmp = RectView;
	//当位图宽度容纳不下的处理
	if((RectView.right - RectView.left) > bm.bmWidth)    
	{
		RectBmp.left = RectView.left + (RectView.right - RectView.left - bm.bmWidth) / 2;
		RectBmp.right = bm.bmWidth;
	}
	else
	{
		RectBmp.left = RectView.left;
		RectBmp.right = RectView.right - RectBmp.left;
	}
	//当位图高度容纳不下的处理
	if((RectView.bottom - RectView.top) > bm.bmHeight)
	{
		RectBmp.top = RectView.top + (RectView.bottom - RectView.top - bm.bmHeight) / 2;
		RectBmp.bottom = bm.bmHeight;
	}
	else
	{
		RectBmp.top = RectView.top;
		RectBmp.bottom = RectView.bottom - RectBmp.top;
	}
	//加载视图到设备上下文中
	pDC->StretchBlt(RectBmp.left, RectBmp.top, RectBmp.right,\
		RectBmp.bottom, &dcmem, 0, 0, bm.bmWidth, bm.bmHeight,\
		SRCCOPY);
	//删除设备上下文
	dcmem.DeleteDC();

}
